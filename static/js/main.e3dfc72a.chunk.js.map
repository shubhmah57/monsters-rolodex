{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAIaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAY,iBAAjB,UACA,qBAAKC,IAAK,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACvB,mCAAML,EAAMI,QAAQE,QACpB,kCAAMN,EAAMI,QAAQG,aCJXC,G,MAAW,SAAAR,GACpB,OAAQ,qBAAKC,UAAW,YAAhB,SACJD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCJ9CM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OAAO,uBAAOZ,UAAY,SACtBa,KAAO,SACPF,YAAeA,EACfG,SAAYF,MC8BLG,E,kDA/Bb,aAAc,IAAD,8BACX,gBA0BFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SA1BtC,EAAKC,MAAM,CACRb,SAAS,GACTU,YAAa,IAJJ,E,0CAQb,WACE,MAAkCI,KAAKD,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZK,EAAmBf,EAASgB,QAAO,SAAArB,GAAO,OAC9CA,EAAQE,KAAKoB,cAAcC,SAASR,EAAYO,kBAClD,OACE,sBAAKzB,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CAAWW,YAAc,kBACzBC,aAAgBU,KAAKV,eACrB,cAAC,EAAD,CAAUJ,SAAYe,S,+BAI5B,WAAoB,IAAD,OAChBI,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKd,SAAS,CAACT,SAASuB,W,GAzBxBC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAChCC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3dfc72a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n\r\n    <div className = \"card-container\">\r\n    <img alt= \"monster\" src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h2> {props.monster.name}</h2>\r\n    <p> { props.monster.email}</p>\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props =>{\r\n    return (<div className= 'card-list'>{\r\n        props.monsters.map(monster=> (<Card key = {monster.id} monster = {monster} />\r\n            ))}\r\n        </div>\r\n        );\r\n}","import React from 'react';\r\nimport './searchbox.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>{\r\n    return(<input className = 'search'\r\n        type = 'search'\r\n        placeholder = {placeholder}\r\n        onChange = {handleChange}\r\n        />);\r\n}\r\n    ","import React, {Component}  from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/searchbox/searchbox.component';\n\nclass App extends Component{\n  constructor(){  \n    super();\n   this.state={\n      monsters:[],\n      searchField: ''\n    };\n   }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder = 'search monsters' \n        handleChange = {this.handleChange} />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n  componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n  \n  handleChange=(e) =>{\n    this.setState({searchField: e.target.value})\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}